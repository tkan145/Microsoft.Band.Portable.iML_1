<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:local="clr-namespace:Microsoft.Band.Portable.iML.Views;assembly=Microsoft.Band.Portable.iML"
    xmlns:cv="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.CarouselView"
	xmlns:toolkit="clr-namespace:FormsToolkit;assembly=FormsToolkit"
	xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms"
	x:Class="Microsoft.Band.Portable.iML.AgentDetailsPage"
	Title="Model Info"
    x:Name="ModelInfo"
    NavigationPage.BackButtonTitle="Back"
    BackgroundColor="{DynamicResource WindowBackgroundTable}">
	<ContentPage.Resources>
     <ResourceDictionary>
        <toolkit:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
     </ResourceDictionary>
    </ContentPage.Resources>
	<ContentPage.ToolbarItems>
        <ToolbarItem Text="Save Chart " Command="{Binding SaveCommand}" CommandParameter="{Binding Source={x:Reference sfChart}}">
        <ToolbarItem.Icon>
            <OnPlatform x:TypeArguments="FileImageSource" iOS="export.png"/>
        </ToolbarItem.Icon>
       </ToolbarItem>
    </ContentPage.ToolbarItems>
	<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="300" x:Name="Row1Header"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
 
        <Grid RowSpacing="0" ColumnSpacing="0" x:Name="HeaderView" BackgroundColor="#072339">
			<!--Chart-->
            <chart:SfChart Margin="10" x:Name="sfChart" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
				<chart:SfChart.Legend>
					<chart:ChartLegend ToggleSeriesVisibility="true">
						<chart:ChartLegend.LabelStyle>
                   			<chart:ChartLegendLabelStyle TextColor="White" />
         				</chart:ChartLegend.LabelStyle>
					</chart:ChartLegend>
				</chart:SfChart.Legend>
                <chart:SfChart.Title>
					<chart:ChartTitle Text=" Learning Performance" TextColor="White"/>
				</chart:SfChart.Title> 
				<chart:SfChart.PrimaryAxis>
                	<chart:CategoryAxis>
            			<chart:CategoryAxis.Title>
                  			<chart:ChartAxisTitle Text="Eposch" TextColor="White"> </chart:ChartAxisTitle>
            			</chart:CategoryAxis.Title>
         			</chart:CategoryAxis>
           		</chart:SfChart.PrimaryAxis>

            	<chart:SfChart.SecondaryAxis>
               		<chart:NumericalAxis>
						<chart:NumericalAxis.Title>
           
                 			<chart:ChartAxisTitle Text="Total reward" TextColor="White"></chart:ChartAxisTitle>
           
          				</chart:NumericalAxis.Title>    
          			</chart:NumericalAxis>   

				</chart:SfChart.SecondaryAxis>
           		<chart:FastLineSeries Label="X" x:Name="XAxis" ItemsSource ="{Binding XData}" XBindingPath="Eposch" YBindingPath="AccumulativeReward"/>
				<!--<chart:FastLineSeries Label="X" x:Name="XAxis" ItemsSource ="{Binding XData}"/>-->
       		</chart:SfChart>
        </Grid>
		
        <local:ParallaxScrollView x:Name="MainScroll" Grid.RowSpan="2">
			<Grid RowSpacing="0">
				<Grid.RowDefinitions>
                    <RowDefinition Height="300" x:Name="Row1Content"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
				
					<StackLayout Grid.Row="1" Spacing="0">
                    	<StackLayout BackgroundColor="{DynamicResource WindowBackgroundTable}"
                                 Spacing="{DynamicResource CardSpacing}"
                                 Padding="{DynamicResource CardPadding}">
							 <!--Model Details-->
                        <local:CardView>
                            <StackLayout Spacing="0">
								<Grid>
                        		<Grid.ColumnDefinitions>
                            		<ColumnDefinition Width="*"/>
                            		<ColumnDefinition Width="34"/>
                        		</Grid.ColumnDefinitions>
                        		<local:LabelSection Text="Details"/>
                   	 			</Grid>
                    
                                <local:HeaderDivider/>
                                <StackLayout IsVisible="{Binding IsBusy}" 
                                         HorizontalOptions="FillAndExpand" 
                                         VerticalOptions="Center" 
                                          BackgroundColor="White"
                                          Padding="{StaticResource StandardPadding}">
                                <ActivityIndicator IsRunning="{Binding IsBusy}">
                                    <ActivityIndicator.Color>
                                        <OnPlatform x:TypeArguments="Color" Android="{StaticResource Accent}"/>
                                    </ActivityIndicator.Color>
                                </ActivityIndicator>
                                <Label Text="Loading Models..." 
                                       HorizontalOptions="Center" 
                                       Style="{DynamicResource iMLListItemTextStyle}"/>
                          	 	</StackLayout>
								<Grid IsVisible="{Binding IsBusy, Converter={StaticResource InvertedBooleanConverter}}}" Padding="{StaticResource StandardPadding}" BackgroundColor="White">
						  	 		<Grid.RowDefinitions>
            							<RowDefinition Height="Auto"/>
							        </Grid.RowDefinitions>
							        <Grid.ColumnDefinitions>
							            <ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
							            <ColumnDefinition Width="*"/>
							            <ColumnDefinition Width="*"/>
							        </Grid.ColumnDefinitions>
									<StackLayout Grid.Column="0">
		                                <Label 	 
												Text="Name :" 
												HorizontalTextAlignment ="End"
												Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
		                                <Label 	
												Text="Gamma :"
												HorizontalTextAlignment ="End"
		                                        Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
										<Label 	
												Text="Alpha :"
												HorizontalTextAlignment ="End"
		                                        Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
									
		                            </StackLayout>
									<StackLayout Grid.Column="1">
		                                <Label 	HorizontalOptions="Center" 
												Text="{Binding Agent.Name}" 
												Style="{DynamicResource iMLListItemDetailTextStyle}"/>
		                                <Label Text="{Binding Agent.Gamma}"
												HorizontalOptions="Center"
		                                        Style="{DynamicResource iMLListItemDetailTextStyle}"/>
										<Label Text="{Binding Agent.Alpha}"
												HorizontalOptions="Center"
		                                        Style="{DynamicResource iMLListItemDetailTextStyle}"/>
		                            </StackLayout>
									<StackLayout Grid.Column="2">
		                                <Label 	Text="Algorithm :" 
												HorizontalTextAlignment ="End"
												Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
		                                <Label 	Text="Espoch :"
												HorizontalTextAlignment ="End"
		                                        Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
										<Label 	
												Text="Epsilon :"
												HorizontalTextAlignment ="End"
		                                        Style="{DynamicResource iMLListItemDetailTextStyleBold}"/>
		                            </StackLayout>
									<StackLayout Grid.Column="3">
		                                <Label 	HorizontalOptions="Center" 
												Text="{Binding Agent.Algorithm}"
												Style="{DynamicResource iMLListItemDetailTextStyle}"/>
		                                <Label Text="{Binding Agent.Eposch}"
												HorizontalOptions="Center"
		                                        Style="{DynamicResource iMLListItemDetailTextStyle}"
		                                        />
										<Label Text="{Binding Agent.Epsilon}"
												HorizontalOptions="Center"
		                                        Style="{DynamicResource iMLListItemDetailTextStyle}"
		                                        />
		                            </StackLayout>
								</Grid>
						
								<local:SectionDivider/>
								<StackLayout Padding="{StaticResource StandardPadding}" BackgroundColor="White">
             
                                        <Button
                                            
                                            Text="Delete this model"                                     
                                            x:Name="ButtonDelete"
											Command="{Binding DeleteCommand}">
                                            <Button.FontAttributes>
                                                <OnPlatform x:TypeArguments="FontAttributes" iOS="Bold"/>
                                            </Button.FontAttributes>
                                            <Button.BackgroundColor>
                                                <OnPlatform x:TypeArguments="Color" Android="{StaticResource PrimaryDark}" iOS="Transparent"/>
                                            </Button.BackgroundColor>
                                            <Button.TextColor>
                                                <OnPlatform x:TypeArguments="Color" Android="White" iOS="{StaticResource PrimaryDark}"/>
                                            </Button.TextColor>
                                            <Button.BorderWidth>
                                                <OnPlatform x:TypeArguments="x:Double" iOS="1"/>
                                            </Button.BorderWidth> 
                                            <Button.BorderColor>
                                                <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ButtonBorder}"/>
                                            </Button.BorderColor> 
                                        </Button>
										<Button
                                            Text="Load Pre-trained agent"                                     
                                            x:Name="ButtonLoadAgent"
											Command="{Binding LoadPreTrainedAgentCommand}">
                                            <Button.FontAttributes>
                                                <OnPlatform x:TypeArguments="FontAttributes" iOS="Bold"/>
                                            </Button.FontAttributes>
                                            <Button.BackgroundColor>
                                                <OnPlatform x:TypeArguments="Color" Android="{StaticResource PrimaryDark}" iOS="Transparent"/>
                                            </Button.BackgroundColor>
                                            <Button.TextColor>
                                                <OnPlatform x:TypeArguments="Color" Android="White" iOS="{StaticResource PrimaryDark}"/>
                                            </Button.TextColor>
                                            <Button.BorderWidth>
                                                <OnPlatform x:TypeArguments="x:Double" iOS="1"/>
                                            </Button.BorderWidth> 
                                            <Button.BorderColor>
                                                <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ButtonBorder}"/>
                                            </Button.BorderColor> 
                                        </Button>
                                    </StackLayout>
                                <local:FooterDivider/>
                            </StackLayout>
                        </local:CardView>

                        <local:CardView IsVisible="{Binding Session}">
                        <StackLayout Spacing="0">
                            <!--Train-->
                            <local:LabelSection Text="Trainning"/>
                                <local:HeaderDivider/>
								<StackLayout  HorizontalOptions="FillAndExpand" 
                                         	VerticalOptions="Center" 
                                          BackgroundColor="White"
                                          Padding="{StaticResource StandardPadding}">
                                <Label Text="{Binding Data}" 
                                       HorizontalOptions="Center" 
                                       Style="{DynamicResource iMLListItemTextStyle}"/>
                          	 	</StackLayout>
								<local:SectionDivider/>
                                <StackLayout Padding="{StaticResource StandardPadding}" BackgroundColor="White">
             							
                                        <Button
                                            
                                            Text="{Binding TrainButtonText}"                                     
                                            x:Name="ButtonTrain"
											Command="{Binding TrainCommand}">
                                            <Button.FontAttributes>
                                                <OnPlatform x:TypeArguments="FontAttributes" iOS="Bold"/>
                                            </Button.FontAttributes>
                                            <Button.BackgroundColor>
                                                <OnPlatform x:TypeArguments="Color" Android="{StaticResource PrimaryDark}" iOS="Transparent"/>
                                            </Button.BackgroundColor>
                                            <Button.TextColor>
                                                <OnPlatform x:TypeArguments="Color" Android="White" iOS="{StaticResource PrimaryDark}"/>
                                            </Button.TextColor>
                                            <Button.BorderWidth>
                                                <OnPlatform x:TypeArguments="x:Double" iOS="1"/>
                                            </Button.BorderWidth> 
                                            <Button.BorderColor>
                                                <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ButtonBorder}"/>
                                            </Button.BorderColor> 
                                        </Button>
                                    </StackLayout>
								
                                <local:FooterDivider/>
                        </StackLayout>
                    </local:CardView>

						<!--Use Message Service instead-->
					<!--<local:CardView IsVisible="{Binding IsTraining}">
                        <StackLayout Spacing="0">
                            <local:LabelSection Text="Feedback"/>
                                <local:HeaderDivider/>
								<StackLayout  HorizontalOptions="FillAndExpand" 
                                         	VerticalOptions="Center" 
                                          BackgroundColor="White"
                                          Padding="{StaticResource StandardPadding}">
                                <Label Text="{Binding ActionResult}" 
                                       HorizontalOptions="Center" 
                                       Style="{DynamicResource iMLListItemTextStyle}"/>
                          	 	</StackLayout>
								<local:SectionDivider/>
                                <StackLayout Padding="{StaticResource StandardPadding}" BackgroundColor="White">
             							<Grid IsVisible="{Binding LoadingDetails, Converter={StaticResource InvertedBooleanConverter}}}" Padding="{StaticResource StandardPadding}" BackgroundColor="White">
             							<Grid.ColumnDefinitions>
								            <ColumnDefinition Width="*"/>
											<ColumnDefinition Width="*"/>
							        	</Grid.ColumnDefinitions>
										<Button Grid.Column="0" 
											Text="Correct"                                     
                                            x:Name="ButtonCorrect"
											Command="{Binding RewardCommand}"
											CommandParameter = "true">
                                            <Button.FontAttributes>
                                                <OnPlatform x:TypeArguments="FontAttributes" iOS="Bold"/>
                                            </Button.FontAttributes>
                                            <Button.BackgroundColor>
                                                <OnPlatform x:TypeArguments="Color" Android="{StaticResource PrimaryDark}" iOS="Transparent"/>
                                            </Button.BackgroundColor>
                                            <Button.TextColor>
                                                <OnPlatform x:TypeArguments="Color" Android="White" iOS="{StaticResource PrimaryDark}"/>
                                            </Button.TextColor>
                                            <Button.BorderWidth>
                                                <OnPlatform x:TypeArguments="x:Double" iOS="1"/>
                                            </Button.BorderWidth> 
                                            <Button.BorderColor>
                                                <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ButtonBorder}"/>
                                            </Button.BorderColor> 
                                        </Button>
										<Button 
                                            Grid.Column="1"
                                            Text="Incorrect"                                     
                                            x:Name="ButtonIncorrect"
											Command="{Binding RewardCommand}"
											CommandParameter = "false">
                                            <Button.FontAttributes>
                                                <OnPlatform x:TypeArguments="FontAttributes" iOS="Bold"/>
                                            </Button.FontAttributes>
                                            <Button.BackgroundColor>
                                                <OnPlatform x:TypeArguments="Color" Android="{StaticResource PrimaryDark}" iOS="Transparent"/>
                                            </Button.BackgroundColor>
                                            <Button.TextColor>
                                                <OnPlatform x:TypeArguments="Color" Android="White" iOS="{StaticResource PrimaryDark}"/>
                                            </Button.TextColor>
                                            <Button.BorderWidth>
                                                <OnPlatform x:TypeArguments="x:Double" iOS="1"/>
                                            </Button.BorderWidth> 
                                            <Button.BorderColor>
                                                <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ButtonBorder}"/>
                                            </Button.BorderColor> 
                                        </Button>
										</Grid>
                                    </StackLayout>
                                <local:FooterDivider/>
                        </StackLayout>
                    </local:CardView>-->
						
					<local:CardView IsVisible="{Binding HasAnyLog}">
                            <!--Logs-->
                            <StackLayout Spacing="0">
                                <local:LabelSection Text="Logs"/>
                                <local:HeaderDivider/>
                                <StackLayout IsVisible="{Binding IsBusy}"
                                             HorizontalOptions="FillAndExpand"
                                             VerticalOptions="Center"
                                              BackgroundColor="White"
                                              Padding="{StaticResource StandardPadding}">
                                    <ActivityIndicator IsRunning="{Binding IsBusy}" >
                                        <ActivityIndicator.Color>
                                            <OnPlatform x:TypeArguments="Color" Android="{StaticResource Accent}"/>
                                        </ActivityIndicator.Color>
                                    </ActivityIndicator>
                                    <Label Text="Loading Logs..."
                                           HorizontalOptions="Center"
                                           Style="{DynamicResource iMLListItemTextStyle}"/>
                                </StackLayout>
                                <local:NonScrollableListView
                                    x:Name="ListViewLogs"
                                    ItemsSource="{Binding Agent.Logs}"
                                    RowHeight="88">
                                    <local:NonScrollableListView.SeparatorColor>
                                        <OnPlatform x:TypeArguments="Color" iOS="{StaticResource ListSeparator}"/>
                                    </local:NonScrollableListView.SeparatorColor>
                                    <local:NonScrollableListView.ItemTemplate>
                                        <DataTemplate>
                                            <ViewCell>
                                                <local:LogCell/>
                                            </ViewCell>
                                        </DataTemplate>
                                    </local:NonScrollableListView.ItemTemplate>
                                </local:NonScrollableListView>
                                <local:FooterDivider/>
                            </StackLayout>
                        </local:CardView>
						</StackLayout>
					</StackLayout>
                </Grid>
		</local:ParallaxScrollView>
    </Grid>
</ContentPage>
